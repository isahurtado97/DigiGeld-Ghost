parameters:
  - name: azureSubscription
    type: string
    default: 'your-azure-subscription-id'
  - name: resource_group
    type: string
    default: 'your-resource-group-name'
  - name: location
    type: string
    default: 'northeurope'
  - name: acr_name
    type: string
    default: 'your-acr-name'
  - name: cluster_name
    type: string
    default: 'your-cluster-name'
  - name: appVersion
    type: string
    default: 'latest'

jobs:
  - deployment: deployEnvironment
    displayName: Deploy Environment
    environment: none
    timeoutInMinutes: 250
    strategy:
      runOnce:
        deploy:
          steps:
            # Deploy Infrastructure
            - task: Bash@3
              condition: eq(variables['deployInfra'], 'true')
              displayName: Deploying Infrastructure
              inputs:
                filePath: '$(Pipeline.Workspace)/artifacts/scripts/deploy-infra.sh'
                arguments: >
                  ${{ parameters.resource_group }}
                  ${{ parameters.location }}
                  ${{ parameters.acr_name }}
                  ${{ parameters.cluster_name }}
                  3
                  Standard_DS2_v2

            # Deploy Ghost Image
            - task: Bash@3
              condition: eq(variables['deployApp'], 'true')
              displayName: Deploying Ghost Image
              inputs:
                filePath: '$(Pipeline.Workspace)/artifacts/scripts/ghost-deployment.sh'
                arguments: >
                  ${{ parameters.resource_group }}
                  ${{ parameters.cluster_name }}
                  $(BuildJob.ImageTag)
                  '$(Pipeline.Workspace)/build/GhostRepo-61'
            ##Test deployment
            #- task: AzurePowerShell@5
            #    condition: eq(variables['deployApp'], 'true')
            #    displayName: Testing deployment 
            #    inputs:
            #    azureSubscription:
            #    ScriptPath:
            #    ScriptArguments:
            #    AzurePowershellVersion: LatestVersion
            #    pwsh: true
            ##Deploy security and monitoring
            #- task: AzurePowerShell@5
            #    condition: eq(variables['deployApp'], 'true')
            #    displayName: Deploying Security and Monitoring
            #    inputs:
            #    azureSubscription:
            #    ScriptPath:
            #    ScriptArguments:
            #    AzurePowershellVersion: LatestVersion
            #    pwsh: true