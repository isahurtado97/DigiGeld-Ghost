parameters:
  - name: azureSubscription
    type: string
    default: 'your-azure-subscription-id'
  - name: resource_group
    type: string
    default: 'your-resource-group-name'
  - name: location
    type: string
    default: 'northeurope'
  - name: acr_name
    type: string
    default: 'your-acr-name'
  - name: cluster_name
    type: string
    default: 'your-cluster-name'
  - name: build_id
    type: string
    default: 'latest'

jobs:
  - deployment: deployEnvironment
    displayName: Deploy Environment
    environment: none
    timeoutInMinutes: 250
    strategy:
      runOnce:
        deploy:
          steps:
            # Deploy Infrastructure
            - task: AzurePowerShell@5
              condition: eq(variables['deployInfra'], 'true')
              displayName: Deploying Infrastructure
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }}
                targetType: 'filePath'
                filePath: '$(Pipeline.Workspace)/scripts/deploy-infra.ps1'
                arguments: >
                  -resourceGroupName ${{ parameters.resource_group }}
                  -location ${{ parameters.location }}
                  -acrName ${{ parameters.acr_name }}
                  -aksClusterName ${{ parameters.cluster_name }}
                pwsh: true
            # Customize ghost-deployment.yaml file
            - task: AzurePowerShell@5
              condition: eq(variables['deployApp'], 'true')
              displayName: Customizing ghost-deployment.yaml file
              inputs:
                targetType: 'filePath'
                filePath: '$(Pipeline.Workspace)/artifacts/scripts/setup-ghost-file.ps1'
                arguments: >
                  -filepath "$(Pipeline.Workspace)/artifacts/templates/ghost-deployment.yaml" 
                  -filefinalpath "$(Pipeline.Workspace)/artifacts/templates/${{ parameters.cluster_name }}.yaml" 
                  -password "xxxsss" 
                  -image "${{ parameters.acr_name }}.azurecr.io/ghost-app:${{ parameters.build_id }}"
                pwsh: true

            # Deploy Ghost Image
            - task: Bash@3
              condition: eq(variables['deployApp'], 'true')
              displayName: Deploying Ghost Image
              inputs:
                filePath: '$(Pipeline.Workspace)/artifacts/scripts/ghost-deployment.sh'
                arguments: >
                  ${{ parameters.resource_group }}
                  ${{ parameters.cluster_name }}
                  "$(Pipeline.Workspace)/artifacts/templates/${{ parameters.cluster_name }}.yaml"
                  'APPINSTKEY'
