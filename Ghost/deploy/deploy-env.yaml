parameters:
  - name: azureSubscription
    type: string
    default: 'your-azure-subscription-id'
  - name: resource_group
    type: string
    default: 'your-resource-group-name'
  - name: location
    type: string
    default: 'northeurope'
  - name: acr_name
    type: string
    default: 'your-acr-name'
  - name: cluster_name
    type: string
    default: 'your-cluster-name'
  - name: build_id
    type: string
    default: 'latest'

jobs:
  - deployment: deployEnvironment
    displayName: Deploy Environment
    environment: none
    timeoutInMinutes: 250
    strategy:
      runOnce:
        deploy:
          steps:
            # Deploying Infrastructure Components.
            - task: AzurePowerShell@5
              condition: eq(variables['deployInfra'], 'true')
              displayName: 'Deploying Infrastructure Components.'
              inputs:
                azureSubscription: ${{ parameters.azureSubscription }} # Replace with your Azure service connection
                ScriptType: 'InlineScript'
                Inline: |
                    if($null -eq(Get-AzResourceGroup -Name ${{ parameters.resource_group }} -ErrorAction SilentlyContinue)){
                      Write-host "Creating Resource Group"
                      $null= New-AzResourceGroup -ResourceGroupName ${{ parameters.resource_group }} -Location ${{ parameters.location }} -Force
                    }
                    Import-Module '$(Pipeline.Workspace)/artifacts/modules/deploy-infra.psm1'
                    Deploy-Infra -resourceGroupName ${{ parameters.resource_group }} -Location ${{ parameters.location }} -aksClusterName ${{ parameters.cluster_name }} -acrName ${{ parameters.acr_name }}
                    Enable-AzAksAddon -ResourceGroupName ${{ parameters.resource_group }} -ClusterName ${{ parameters.cluster_name }} -Name AzurePolicy
                azurePowerShellVersion: 'LatestVersion'
            # Deploying App: ghost-deployment.yaml file customize.
            - task: PowerShell@2
              condition: eq(variables['deployApp'], 'true')
              displayName: "Deploying App: ghost-deployment.yaml file customize."
              inputs:
                targetType: 'filePath'
                filePath: '$(Pipeline.Workspace)/artifacts/Ghost/scripts/powershell/setup-ghost-file.ps1'
                arguments: >
                  -filepath "$(Pipeline.Workspace)/artifacts/Ghost/templates/ghost-deployment.yaml" 
                  -filefinalpath "$(Pipeline.Workspace)/artifacts/Ghost/templates/${{ parameters.cluster_name }}.yaml"
                  -password "xxxsss" 
                  -image "${{parameters.acr_name}}.azurecr.io/ghost-app:${{parameters.build_id}}"
                pwsh: true
            # Deploying App: Push Ghost Image to AKS.
            - task: Bash@3
              condition: eq(variables['deployApp'], 'true')
              displayName: "Deploying App: Push Ghost Image to AKS."
              inputs:
                filePath: '$(Pipeline.Workspace)/artifacts/Ghost/scripts/bash/ghost-deployment.sh'
                arguments: >
                  ${{ parameters.resource_group }}
                  ${{ parameters.cluster_name }}
                  "$(Pipeline.Workspace)/artifacts/Ghost/templates/${{ parameters.cluster_name }}.yaml"