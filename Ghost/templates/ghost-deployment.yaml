# Namespace for Ghost and MySQL resources
apiVersion: v1
kind: Namespace
metadata:
  name: ghost

---

# Ghost Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost
  namespace: ghost
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ghost
  template:
    metadata:
      labels:
        app: ghost
    spec:
      containers:
      - name: ghost
        image: "image"
        ports:
        - containerPort: 2368
        env:
        - name: database__client
          value: mysql
        - name: database__connection__host
          value: mysql-service.ghost.svc.cluster.local
        - name: database__connection__user
          valueFrom:
            secretKeyRef:
              name: ghost-secrets
              key: user
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              name: ghost-secrets
              key: password
        - name: database__connection__database
          value: dgghostdb
        volumeMounts:
        - name: ghost-content
          mountPath: /var/lib/ghost/content
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
      volumes:
      - name: ghost-content
        persistentVolumeClaim:
          claimName: ghost-pvc
---

# Service for Ghost
apiVersion: v1
kind: Service
metadata:
  name: ghost-service
  namespace: ghost
spec:
  selector:
    app: ghost
  ports:
  - protocol: TCP
    port: 80
    targetPort: 2368
  type: ClusterIP

---

# StatefulSet for MySQL
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: ghost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  serviceName: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8.0
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ghost-secrets
              key: root-password
        - name: MYSQL_DATABASE
          value: dgghostdb
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: ghost-secrets
              key: user
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ghost-secrets
              key: password
        volumeMounts:
        - name: mysql-data
          mountPath: /var/lib/mysql
        resources:
          requests:
            cpu: 300m
            memory: 512Mi
          limits:
            cpu: 700m
            memory: 1Gi
      volumes:
      - name: mysql-data
        persistentVolumeClaim:
          claimName: mysql-pvc


---

# Service for MySQL
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  namespace: ghost
spec:
  clusterIP: None
  selector:
    app: mysql
  ports:
  - protocol: TCP
    port: 3306
    targetPort: 3306

---

# PersistentVolumeClaim for Ghost
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: ghost-pvc
  namespace: ghost
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---

# PersistentVolumeClaim for MySQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: ghost
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi

---

# AzureKeyVaultSecret for root-password
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: root-password-sync
  namespace: ghost
spec:
  vault:
    name: "dg-aks-acc-vault"  # Replace with your Azure Key Vault name
    object:
      name: "root-password"     # Secret name in Azure Key Vault
      type: secret
  output:
    secret:
      name: ghost-secrets       # Kubernetes Secret to create/update
      dataKey: root-password    # Key inside the Kubernetes Secret

---

# AzureKeyVaultSecret for password
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: password-sync
  namespace: ghost
spec:
  vault:
    name: "dg-aks-acc-vault"
    object:
      name: "password"          # Secret name in Azure Key Vault
      type: secret
  output:
    secret:
      name: ghost-secrets       # Kubernetes Secret to create/update
      dataKey: password

---

# AzureKeyVaultSecret for password
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: user-sync
  namespace: ghost
spec:
  vault:
    name: "dg-aks-acc-vault"
    object:
      name: "user"          # Secret name in Azure Key Vault
      type: secret
  output:
    secret:
      name: ghost-secrets       # Kubernetes Secret to create/update
      dataKey: user

---
# AzureKeyVault tlc certf
apiVersion: spv.no/v2beta1
kind: AzureKeyVaultSecret
metadata:
  name: ghost-tls-secret-sync
  namespace: ghost
spec:
  vault:
    name: "dg-aks-acc-vault"
    object:
      name: dgghostapp
      type: certificate
  output:
    secret:
      name: ghost-tls-secret
      type: kubernetes.io/tls
---
# Horizontal Pod Autoscaler for Ghost
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ghost-hpa
  namespace: ghost
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ghost
  minReplicas: 2
  maxReplicas: 20
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mysql-hpa
  namespace: ghost
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: mysql
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---

# Ingress for Ghost using Azure Application Gateway
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ghost-ingress
  namespace: ghost
  annotations:
    appgw.ingress.kubernetes.io/ssl-redirect: "true"
    appgw.ingress.kubernetes.io/request-timeout: "30"
    appgw.ingress.kubernetes.io/connection-draining: "true"
    appgw.ingress.kubernetes.io/backend-path-prefix: "/"
spec:
  ingressClassName: azure-application-gateway
  tls:
  - hosts:
    - dgghostapp.ichp-tech.info
    secretName: ghost-tls-secret  # Ensure this secret exists
  rules:
  - host: dgghostapp.ichp-tech.info
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: ghost-service
            port:
              number: 2368
