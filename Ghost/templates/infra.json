{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "vaults_dg_aks_acc_vault_name": {
          "defaultValue": "dg-aks-acc-vault",
          "type": "String"
      },
      "registries_dgacracc_name": {
          "defaultValue": "dgacracc",
          "type": "String"
      },
      "managedClusters_dg_aks_acc_name": {
          "defaultValue": "dg-aks-acc",
          "type": "String"
      },
      "applicationGateways_dg_aks_acc_appgw_externalid": {
          "defaultValue": "/subscriptions/720ee0cb-85b8-47f1-a0d7-ef73d767f24b/resourceGroups/dg-aks-acc/providers/Microsoft.Network/applicationGateways/dg-aks-acc-appgw",
          "type": "String"
      },
      "workspaces_dg_aks_acc_Workspace_externalid": {
          "defaultValue": "/subscriptions/720ee0cb-85b8-47f1-a0d7-ef73d767f24b/resourceGroups/dg-rg-acc/providers/Microsoft.OperationalInsights/workspaces/dg-aks-acc-Workspace",
          "type": "String"
      },
      "publicIPAddresses_bd1aec30_36bc_48ef_8301_435ccbf0d11f_externalid": {
          "defaultValue": "/subscriptions/720ee0cb-85b8-47f1-a0d7-ef73d767f24b/resourceGroups/dg-aks-acc/providers/Microsoft.Network/publicIPAddresses/bd1aec30-36bc-48ef-8301-435ccbf0d11f",
          "type": "String"
      },
      "userAssignedIdentities_dg_aks_acc_agentpool_externalid": {
          "defaultValue": "/subscriptions/720ee0cb-85b8-47f1-a0d7-ef73d767f24b/resourceGroups/dg-aks-acc/providers/Microsoft.ManagedIdentity/userAssignedIdentities/dg-aks-acc-agentpool",
          "type": "String"
      }
  },
  "variables": {},
  "resources": [
      {
          "type": "Microsoft.ContainerRegistry/registries",
          "apiVersion": "2023-11-01-preview",
          "name": "[parameters('registries_dgacracc_name')]",
          "location": "northeurope",
          "sku": {
              "name": "Basic",
              "tier": "Basic"
          },
          "properties": {
              "adminUserEnabled": false,
              "policies": {
                  "quarantinePolicy": {
                      "status": "disabled"
                  },
                  "trustPolicy": {
                      "type": "Notary",
                      "status": "disabled"
                  },
                  "retentionPolicy": {
                      "days": 7,
                      "status": "disabled"
                  },
                  "exportPolicy": {
                      "status": "enabled"
                  },
                  "azureADAuthenticationAsArmPolicy": {
                      "status": "enabled"
                  },
                  "softDeletePolicy": {
                      "retentionDays": 7,
                      "status": "disabled"
                  }
              },
              "encryption": {
                  "status": "disabled"
              },
              "dataEndpointEnabled": false,
              "publicNetworkAccess": "Enabled",
              "networkRuleBypassOptions": "AzureServices",
              "zoneRedundancy": "Disabled",
              "anonymousPullEnabled": false,
              "metadataSearch": "Disabled"
          }
      },
      {
          "type": "Microsoft.ContainerService/managedClusters",
          "apiVersion": "2024-06-02-preview",
          "name": "[parameters('managedClusters_dg_aks_acc_name')]",
          "location": "northeurope",
          "sku": {
              "name": "Base",
              "tier": "Free"
          },
          "kind": "Base",
          "identity": {
              "type": "SystemAssigned"
          },
          "properties": {
              "kubernetesVersion": "1.29",
              "dnsPrefix": "[concat(parameters('managedClusters_dg_aks_acc_name'), '-dg-rg-acc-720ee0')]",
              "agentPoolProfiles": [
                  {
                      "name": "nodepool1",
                      "count": 3,
                      "vmSize": "Standard_DS2_v2",
                      "osDiskSizeGB": 128,
                      "osDiskType": "Managed",
                      "kubeletDiskType": "OS",
                      "maxPods": 110,
                      "type": "VirtualMachineScaleSets",
                      "maxCount": 5,
                      "minCount": 1,
                      "enableAutoScaling": true,
                      "powerState": {
                          "code": "Stopped"
                      },
                      "orchestratorVersion": "1.29",
                      "enableNodePublicIP": false,
                      "mode": "System",
                      "enableEncryptionAtHost": false,
                      "enableUltraSSD": false,
                      "osType": "Linux",
                      "osSKU": "Ubuntu",
                      "upgradeSettings": {
                          "maxSurge": "10%"
                      },
                      "enableFIPS": false,
                      "securityProfile": {
                          "sshAccess": "LocalUser",
                          "enableVTPM": false,
                          "enableSecureBoot": false
                      }
                  }
              ],
              "linuxProfile": {
                  "adminUsername": "azureuser",
                  "ssh": {
                      "publicKeys": [
                          {
                              "keyData": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCXBsTl2i8/iqntE64XapRpSyqxRbRaaw7mxbeHlUiPLZrGnHXIzKlc2YkT0XPMt9+Xh5jRjztpTsx45FrZ06O0qMlf4A9eVoRTp738nHOOrdWBeWa5I2rm09XVp9kCWAaMLsSovKHpWy5PNpTvMr/PiafossNar0yLmKhwBFdVz0HMzX/7h7EYZpey37zr4JLh23L+E/gNmyPeAVpbpAULQUKrr7+6SENbqIFIqM59vMhco2nFyLPdOhMjwPot0lmLsboIgcTDGi3ySfE+Qb2ThXgQ3MjlGTFIc79PKS5/1xipjg61H+jXb0iDEWYQiWtN6234FqHWwugY/RTKYfp7"
                          }
                      ]
                  }
              },
              "servicePrincipalProfile": {
                  "clientId": "msi"
              },
              "addonProfiles": {
                  "azurepolicy": {
                      "enabled": true
                  },
                  "ingressApplicationGateway": {
                      "enabled": true,
                      "config": {
                          "applicationGatewayId": "[parameters('applicationGateways_dg_aks_acc_appgw_externalid')]",
                          "effectiveApplicationGatewayId": "[parameters('applicationGateways_dg_aks_acc_appgw_externalid')]"
                      }
                  },
                  "omsagent": {
                      "enabled": true,
                      "config": {
                          "logAnalyticsWorkspaceResourceID": "[parameters('workspaces_dg_aks_acc_Workspace_externalid')]",
                          "useAADAuth": "true"
                      }
                  }
              },
              "nodeResourceGroup": "[parameters('managedClusters_dg_aks_acc_name')]",
              "enableRBAC": true,
              "supportPlan": "KubernetesOfficial",
              "networkProfile": {
                  "networkPlugin": "kubenet",
                  "networkPolicy": "none",
                  "loadBalancerSku": "standard",
                  "loadBalancerProfile": {
                      "managedOutboundIPs": {
                          "count": 1
                      },
                      "effectiveOutboundIPs": [
                          {
                              "id": "[parameters('publicIPAddresses_bd1aec30_36bc_48ef_8301_435ccbf0d11f_externalid')]"
                          }
                      ],
                      "backendPoolType": "nodeIPConfiguration"
                  },
                  "podCidr": "10.244.0.0/16",
                  "serviceCidr": "10.0.0.0/16",
                  "dnsServiceIP": "10.0.0.10",
                  "outboundType": "loadBalancer",
                  "podCidrs": [
                      "10.244.0.0/16"
                  ],
                  "serviceCidrs": [
                      "10.0.0.0/16"
                  ],
                  "ipFamilies": [
                      "IPv4"
                  ],
                  "podLinkLocalAccess": "IMDS"
              },
              "identityProfile": {
                  "kubeletidentity": {
                      "resourceId": "[parameters('userAssignedIdentities_dg_aks_acc_agentpool_externalid')]",
                      "clientId": "acc02bb0-f37f-4980-a008-59c79fc15674",
                      "objectId": "9b05fe1e-8fc1-49ae-9a49-b7f9b67fcf99"
                  }
              },
              "autoScalerProfile": {
                  "balance-similar-node-groups": "false",
                  "daemonset-eviction-for-empty-nodes": false,
                  "daemonset-eviction-for-occupied-nodes": true,
                  "expander": "random",
                  "ignore-daemonsets-utilization": false,
                  "max-empty-bulk-delete": "10",
                  "max-graceful-termination-sec": "600",
                  "max-node-provision-time": "15m",
                  "max-total-unready-percentage": "45",
                  "new-pod-scale-up-delay": "0s",
                  "ok-total-unready-count": "3",
                  "scale-down-delay-after-add": "10m",
                  "scale-down-delay-after-delete": "10s",
                  "scale-down-delay-after-failure": "3m",
                  "scale-down-unneeded-time": "10m",
                  "scale-down-unready-time": "20m",
                  "scale-down-utilization-threshold": "0.5",
                  "scan-interval": "10s",
                  "skip-nodes-with-local-storage": "false",
                  "skip-nodes-with-system-pods": "true"
              },
              "autoUpgradeProfile": {
                  "nodeOSUpgradeChannel": "NodeImage"
              },
              "disableLocalAccounts": false,
              "securityProfile": {},
              "storageProfile": {
                  "diskCSIDriver": {
                      "enabled": true,
                      "version": "v1"
                  },
                  "fileCSIDriver": {
                      "enabled": true
                  },
                  "snapshotController": {
                      "enabled": true
                  }
              },
              "oidcIssuerProfile": {
                  "enabled": true
              },
              "workloadAutoScalerProfile": {},
              "azureMonitorProfile": {
                  "metrics": {
                      "enabled": true,
                      "kubeStateMetrics": {}
                  },
                  "containerInsights": {
                      "enabled": true,
                      "logAnalyticsWorkspaceResourceId": "[parameters('workspaces_dg_aks_acc_Workspace_externalid')]"
                  }
              },
              "metricsProfile": {
                  "costAnalysis": {
                      "enabled": false
                  }
              },
              "nodeProvisioningProfile": {
                  "mode": "Manual"
              },
              "bootstrapProfile": {
                  "artifactSource": "Direct"
              }
          }
      },
      {
          "type": "Microsoft.KeyVault/vaults",
          "apiVersion": "2024-04-01-preview",
          "name": "[parameters('vaults_dg_aks_acc_vault_name')]",
          "location": "northeurope",
          "properties": {
              "sku": {
                  "family": "A",
                  "name": "standard"
              },
              "tenantId": "d3aff2ea-62b8-4b8e-819f-fbb80455d597",
              "accessPolicies": [],
              "enabledForDeployment": false,
              "enableSoftDelete": true,
              "softDeleteRetentionInDays": 90,
              "enableRbacAuthorization": true,
              "vaultUri": "[concat('https://', parameters('vaults_dg_aks_acc_vault_name'), '.vault.azure.net/')]",
              "provisioningState": "Succeeded",
              "publicNetworkAccess": "Enabled"
          }
      },
      {
          "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
          "apiVersion": "2023-11-01-preview",
          "name": "[concat(parameters('registries_dgacracc_name'), '/_repositories_admin')]",
          "dependsOn": [
              "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgacracc_name'))]"
          ],
          "properties": {
              "description": "Can perform all read, write and delete operations on the registry",
              "actions": [
                  "repositories/*/metadata/read",
                  "repositories/*/metadata/write",
                  "repositories/*/content/read",
                  "repositories/*/content/write",
                  "repositories/*/content/delete"
              ]
          }
      },
      {
          "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
          "apiVersion": "2023-11-01-preview",
          "name": "[concat(parameters('registries_dgacracc_name'), '/_repositories_pull')]",
          "dependsOn": [
              "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgacracc_name'))]"
          ],
          "properties": {
              "description": "Can pull any repository of the registry",
              "actions": [
                  "repositories/*/content/read"
              ]
          }
      },
      {
          "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
          "apiVersion": "2023-11-01-preview",
          "name": "[concat(parameters('registries_dgacracc_name'), '/_repositories_pull_metadata_read')]",
          "dependsOn": [
              "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgacracc_name'))]"
          ],
          "properties": {
              "description": "Can perform all read operations on the registry",
              "actions": [
                  "repositories/*/content/read",
                  "repositories/*/metadata/read"
              ]
          }
      },
      {
          "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
          "apiVersion": "2023-11-01-preview",
          "name": "[concat(parameters('registries_dgacracc_name'), '/_repositories_push')]",
          "dependsOn": [
              "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgacracc_name'))]"
          ],
          "properties": {
              "description": "Can push to any repository of the registry",
              "actions": [
                  "repositories/*/content/read",
                  "repositories/*/content/write"
              ]
          }
      },
      {
          "type": "Microsoft.ContainerRegistry/registries/scopeMaps",
          "apiVersion": "2023-11-01-preview",
          "name": "[concat(parameters('registries_dgacracc_name'), '/_repositories_push_metadata_write')]",
          "dependsOn": [
              "[resourceId('Microsoft.ContainerRegistry/registries', parameters('registries_dgacracc_name'))]"
          ],
          "properties": {
              "description": "Can perform all read and write operations on the registry",
              "actions": [
                  "repositories/*/metadata/read",
                  "repositories/*/metadata/write",
                  "repositories/*/content/read",
                  "repositories/*/content/write"
              ]
          }
      },
      {
          "type": "Microsoft.ContainerService/managedClusters/agentPools",
          "apiVersion": "2024-06-02-preview",
          "name": "[concat(parameters('managedClusters_dg_aks_acc_name'), '/nodepool1')]",
          "dependsOn": [
              "[resourceId('Microsoft.ContainerService/managedClusters', parameters('managedClusters_dg_aks_acc_name'))]"
          ],
          "properties": {
              "count": 3,
              "vmSize": "Standard_DS2_v2",
              "osDiskSizeGB": 128,
              "osDiskType": "Managed",
              "kubeletDiskType": "OS",
              "maxPods": 110,
              "type": "VirtualMachineScaleSets",
              "maxCount": 5,
              "minCount": 1,
              "enableAutoScaling": true,
              "powerState": {
                  "code": "Stopped"
              },
              "orchestratorVersion": "1.29",
              "enableNodePublicIP": false,
              "mode": "System",
              "enableEncryptionAtHost": false,
              "enableUltraSSD": false,
              "osType": "Linux",
              "osSKU": "Ubuntu",
              "upgradeSettings": {
                  "maxSurge": "10%"
              },
              "enableFIPS": false,
              "securityProfile": {
                  "sshAccess": "LocalUser",
                  "enableVTPM": false,
                  "enableSecureBoot": false
              }
          }
      },
      {
          "type": "Microsoft.KeyVault/vaults/keys",
          "apiVersion": "2024-04-01-preview",
          "name": "[concat(parameters('vaults_dg_aks_acc_vault_name'), '/dgghostapp')]",
          "location": "northeurope",
          "dependsOn": [
              "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_dg_aks_acc_vault_name'))]"
          ],
          "properties": {
              "attributes": {
                  "enabled": true,
                  "nbf": 1731312104,
                  "exp": 1762848704
              }
          }
      },
      {
          "type": "Microsoft.KeyVault/vaults/secrets",
          "apiVersion": "2024-04-01-preview",
          "name": "[concat(parameters('vaults_dg_aks_acc_vault_name'), '/dgghostapp')]",
          "location": "northeurope",
          "dependsOn": [
              "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_dg_aks_acc_vault_name'))]"
          ],
          "properties": {
              "contentType": "application/x-pem-file",
              "attributes": {
                  "enabled": true,
                  "nbf": 1731312104,
                  "exp": 1762848704
              }
          }
      },
      {
          "type": "Microsoft.KeyVault/vaults/secrets",
          "apiVersion": "2024-04-01-preview",
          "name": "[concat(parameters('vaults_dg_aks_acc_vault_name'), '/password')]",
          "location": "northeurope",
          "dependsOn": [
              "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_dg_aks_acc_vault_name'))]"
          ],
          "tags": {
              "file-encoding": "utf-8"
          },
          "properties": {
              "attributes": {
                  "enabled": true
              }
          }
      },
      {
          "type": "Microsoft.KeyVault/vaults/secrets",
          "apiVersion": "2024-04-01-preview",
          "name": "[concat(parameters('vaults_dg_aks_acc_vault_name'), '/root-password')]",
          "location": "northeurope",
          "dependsOn": [
              "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_dg_aks_acc_vault_name'))]"
          ],
          "properties": {
              "attributes": {
                  "enabled": true
              }
          }
      },
      {
          "type": "Microsoft.KeyVault/vaults/secrets",
          "apiVersion": "2024-04-01-preview",
          "name": "[concat(parameters('vaults_dg_aks_acc_vault_name'), '/user')]",
          "location": "northeurope",
          "dependsOn": [
              "[resourceId('Microsoft.KeyVault/vaults', parameters('vaults_dg_aks_acc_vault_name'))]"
          ],
          "tags": {
              "file-encoding": "utf-8"
          },
          "properties": {
              "attributes": {
                  "enabled": true
              }
          }
      }
  ]
}